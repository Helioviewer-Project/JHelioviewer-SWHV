<?xml version="1.0" encoding="utf-8"?>
<project default="all">
    <property name="bin" location="bin"/>
    <property name="lib" location="../lib"/>
    <property name="tmp" location="tmp"/>
    <property name="resources" value="release-resources"/>
    <property name="jarfile" value="${bin}/JHelioviewer.jar"/>

   <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${resources}/shared/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask">
        <classpath path="${resources}/mac/lib/appbundler-1.0.jar"/>
    </taskdef>

    <taskdef name="nsis" classname="com.danielreese.nsisant.Task">
        <classpath location="${resources}/windows/nsisant-1.3.jar"/>
    </taskdef>

    <loadfile property="version" srcFile="../VERSION"/>
    <exec executable="git" outputproperty="revision">
        <arg line="rev-list --count HEAD"/>
    </exec>
    <property name="pkg.name" value="jhv-${version}.${revision}"/>

    <target name="clean">
        <delete dir="${bin}"/>
        <delete dir="${tmp}"/>
    </target>

    <target name="init">
        <mkdir dir="${bin}"/>
        <mkdir dir="${tmp}"/>
        <copy todir="${bin}">
            <file file="../README.md"/>
            <file file="../LICENSE"/>
        </copy>
        <echo message="${version}.${revision}" file="${bin}/VERSION"/>
    </target>

    <target name="jar-bundle">
        <jar destfile="${jarfile}">
            <manifest>
                <attribute name="Main-Class" value="org.helioviewer.jhv.JHelioviewer"/>
                <attribute name="Class-Path" value="."/>
                <attribute name="version" value="${version}"/>
                <attribute name="revision" value="${revision}"/>
            </manifest>
            <zipgroupfileset dir="${lib}"/>
            <zipfileset src="../JHelioviewer.jar"/>
        </jar>
    </target>

    <target name="release-windows" depends="init,jar-bundle">
        <nsis script="${basedir}/${resources}/windows/windows-setup.nsi" noconfig="yes">
            <define name="JHV_VERSION" value="${version}"/>
            <define name="JHV_REVISION" value="${revision}"/>
            <define name="RESOURCE_PATH" value="${basedir}/${resources}/windows"/>
            <define name="BUILD_PATH" value="${bin}"/>
            <define name="FILE_NAME" value="${pkg.name}"/>
            <define name="README_FILE" value="${bin}/README.md"/>
            <define name="COPYING_FILE" value="${bin}/LICENSE"/>
            <define name="VERSION_FILE" value="${bin}/VERSION"/>
        </nsis>
    </target>

    <target name="release-mac" depends="init,jar-bundle">
        <if>
            <contains string="${os.name}" substring="mac" casesensitive="false"/>
            <then>
                <exec executable="chmod" dir="${resources}/mac">
                    <arg value="u+x"/>
                    <arg value="bundle.sh"/>
                </exec>
                <mkdir dir="${tmp}/mac/"/>
                <bundleapp outputdirectory="${tmp}/mac/" name="JHelioviewer" displayname="JHelioviewer" identifier="org.helioviewer.jhv" mainclassname="org.helioviewer.jhv.JHelioviewer" icon="${resources}/mac/JHV_icon.icns" shortversion="${version}" version="${version}.${revision}" copyright="Â©2018, European Space Agency">
                    <classpath file="${bin}/JHelioviewer.jar"/>
                    <option value="-Xdock:name=JHelioviewer"/>
                </bundleapp>
                <exec executable="${resources}/mac/bundle.sh">
                    <env key="TEMP" value="${tmp}/mac"/>
                    <env key="RESOURCES" value="${resources}/mac"/>
                    <env key="BUILD" value="${bin}"/>
                    <env key="NAME" value="${pkg.name}"/>
                    <env key="README" value="${bin}/README.md"/>
                    <env key="COPYING" value="${bin}/LICENSE"/>
                    <env key="VERSION" value="${bin}/VERSION"/>
                </exec>
            </then>
            <else>
                <echo> Cannot build MacOS dmg file under ${os.name}.</echo>
            </else>
        </if>
    </target>

    <target name="release-tar" depends="init,jar-bundle">
        <tar destfile="${bin}/${pkg.name}.bin.tar.gz" compression="gzip">
            <zipfileset dir="${bin}" includes="JHelioviewer.jar, README.md, LICENSE" prefix="${pkg.name}"/>
        </tar>
    </target>

    <target name="all" depends="release-tar,release-windows,release-mac"/>

</project>
