<?xml version="1.0" encoding="utf-8"?>
<project name="JHelioviewer" default="all">
    <property environment="env"/>
    <property name="src" location="src"/>
    <property name="bin" location="bin"/>
    <property name="resources" location="resources"/>
    <property name="jarfile" location= "JHelioviewer.jar"/>

    <condition property="DSN" value="${env.SENTRY_DSN}" else="">
        <not>
            <equals arg1="${env.SENTRY_DSN}" arg2="$${env.SENTRY_DSN}"/>
        </not>
    </condition>

    <fileset id="libfiles" dir="./">
        <include name="lib/**/*.jar"/>
    </fileset>
    <loadfile property="version" srcFile="VERSION"/>
    <exec executable="sh" outputproperty="revision">
        <arg value="-c"/>
        <arg value="git rev-list --count HEAD || echo 0"/>
    </exec>

    <target name="clean">
        <delete dir="${bin}"/>
        <delete file="${jarfile}"/>
    </target>

    <target name="compile">
        <mkdir dir="${bin}"/>
        <javac srcdir="${src}" destdir="${bin}" target="19" source="19" debug="on" debuglevel="source,lines,vars" includeantruntime="false" encoding="utf-8">
            <compilerarg value="-Xlint:all"/>
            <classpath>
                <fileset refid="libfiles"/>
            </classpath>
        </javac>
    </target>

    <target name="prone">
        <mkdir dir="${bin}"/>
        <!-- using github.com/google/error-prone-javac is required when running on JDK 8 -->
        <condition property="jdk9orlater">
            <javaversion atleast="9"/>
        </condition>

        <path id="processorpath.ref">
            <pathelement location="extra/prone/error_prone_core-2.18.0-with-dependencies.jar"/>
            <pathelement location="extra/prone/dataflow-errorprone-3.31.0.jar"/>
            <!-- Add annotation processors and Error Prone custom checks here if needed -->
        </path>

        <javac srcdir="${src}" destdir="${bin}" fork="yes" includeantruntime="no" xmlns:unless="ant:unless">
            <compilerarg value="-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED"/>
            <compilerarg value="-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED"/>
            <compilerarg value="-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED"/>
            <compilerarg value="-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED"/>
            <compilerarg value="-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED"/>
            <compilerarg value="-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED"/>
            <compilerarg value="-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED"/>
            <compilerarg value="-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"/>
            <compilerarg value="-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED"/>
            <compilerarg value="-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED"/>
            <compilerarg value="-J-Xbootclasspath/p:${javac.jar}" unless:set="jdk9orlater"/>
            <compilerarg line="-XDcompilePolicy=simple"/>
            <compilerarg value="-processorpath"/>
            <compilerarg pathref="processorpath.ref"/>
            <!-- CatchAndPrintStackTrace - not interesting -->
            <!-- UnusedVariable - works badly for private records -->
            <compilerarg value="-Xplugin:ErrorProne
                                -Xep:ReferenceEquality:OFF
                                -Xep:CatchAndPrintStackTrace:OFF
                                -Xep:EmptyCatch:OFF
                                -Xep:UnnecessaryParentheses:OFF
                                -Xep:DoubleBraceInitialization:OFF
                                -Xep:UnusedVariable:OFF
                                "/>
            <classpath>
                <fileset refid="libfiles"/>
            </classpath>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <copy file="sentry.properties" tofile="${bin}/sentry.properties"/>
        <replace file="${bin}/sentry.properties" token="@@DSN" value="${DSN}"/>
        <replace file="${bin}/sentry.properties" token="@@VERSION" value="${version}"/>
        <copy file="version.properties" tofile="${bin}/version.properties"/>
        <replace file="${bin}/version.properties" token="@@VERSION" value="${version}"/>
        <replace file="${bin}/version.properties" token="@@REVISION" value="${revision}"/>
        <manifestclasspath property="manifest_cp" jarfile="${jarfile}">
            <classpath>
                <fileset refid="libfiles"/>
            </classpath>
        </manifestclasspath>
        <jar destfile="${jarfile}">
            <fileset dir="${bin}"/>
            <fileset dir="${resources}"/>
            <manifest>
                <attribute name="Automatic-Module-Name" value="org.helioviewer.jhv"/>
                <attribute name="Main-Class" value="org.helioviewer.jhv.JHelioviewer"/>
                <attribute name="Class-Path" value="${manifest_cp}"/>
                <attribute name="version" value="${version}"/>
                <attribute name="revision" value="${revision}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java jar="${jarfile}" fork="true"/>
    </target>

    <target name="all" depends="jar"/>
</project>
